# Copyright (C) 2021 - present Juergen Zimmermann, Hochschule Karlsruhe
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# https://docs.gradle.org/7.0/userguide/platforms.html#sub:central-declaration-of-dependencies
# https://toml.io   TOML = Tom's Obvious Minimal Language

# table = Schluessel/Wert-Paare
[versions]
kotlin = "1.6.0-RC2"
kotlinJvmTarget = "17"

springBoot = "2.6.0-RC1"
springGraphQL = "1.0.0-M3"
#graphqlJava = "17.3"
graphqlJavaDataloader = "3.1.1"
#javaNativeImage = "5.3.0"
annotations = "22.0.0"
openapi = "1.5.12"
yavi = "0.9.1"
jansi = "2.4.0"

# BOM und ueberschreiben
allureBom = "2.16.1"
#jackson = "2.13.0"
#junit = "5.8.1"
#kotlinCoroutines = "1.5.2"
mongodb = "4.4.0-beta2"
mongoDriverReactivestreams = "4.4.0-beta2"
netty = "4.1.70.Final"
#reactor = "2020.0.12"
#slf4j = "1.7.32"
#spring = "5.3.12"
#springData = "2021.1.0-RC1"
#springHateoas = "1.4.0-RC1"
#springSecurity = "5.6.0-RC1"
#tomcat = "9.0.53"

# Testen
junitPlatformSuite = "1.8.1"
kotest = "5.0.0.M3"
mockk = "1.12.0"

# QS, Reports, Dokumentation
ktlint = "0.43.0"
ktlintKotlin = "1.6.0-RC2"
jacoco = "0.8.7"
allure = "2.16.1"
allureCommandline = "2.16.1"
allureJunit = "2.16.1"
aspectjweaver = "1.9.8.M1"
asciidoctorj = "2.5.2"
asciidoctorjDiagram = "2.2.1"
asciidoctorjPdf = "1.5.4"
dokka = "1.5.31"

# Plugins
kotlinPlugin = "1.6.0-RC2"
#springAot = "0.10.3"
testLogger = "3.1.0"
allurePlugin = "2.9.6"
sweeney = "4.4.0"
detekt = "1.19.0-RC1"
jib = "3.1.4"
owaspDependencycheck = "6.4.1.1"
snyk = "0.4"
asciidoctor = "3.3.2"
nwillc = "3.0.5"
benManes = "0.39.0"
licenseReport = "2.0"

[libraries]
kotlinBom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
#coroutinesBom = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-bom", version.ref = "kotlinCoroutines" }
nettyBom = { module = "io.netty:netty-bom", version.ref = "netty" }
#reactorBom = { module = "io.projectreactor:reactor-bom", version.ref = "reactor" }
#jacksonBom = { module = "com.fasterxml.jackson:jackson-bom", version.ref = "jackson" }
#slf4jApi = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
#slf4jJul = { module = "org.slf4j:jul-to-slf4j", version.ref = "slf4j" }
#springBom = { module = "org.springframework:spring-framework-bom", version.ref = "spring" }
#springDataBom = { module = "org.springframework.data:spring-data-bom", version.ref = "springData" }
#springHateoas = { module = "org.springframework.hateoas:spring-hateoas", version.ref = "springHateoas" }
#springSecurityBom = { module = "org.springframework.security:spring-security-bom", version.ref = "springSecurity" }
allureBom = { module = "io.qameta.allure:allure-bom", version.ref = "allureBom" }
#junitBom = { module = "org.junit:junit-bom", version.ref = "junit" }
springBootBom = { module = "org.springframework.boot:spring-boot-starter-parent", version.ref = "springBoot" }

springGraphQL = { module = "org.springframework.experimental:graphql-spring-boot-starter", version.ref = "springGraphQL" }
#graphqlJava = { module = "com.graphql-java:graphql-java", version.ref = "graphqlJava" }
graphqlJavaDataloader = { module = "com.graphql-java:java-dataloader", version.ref = "graphqlJavaDataloader" }
mongodbCore = { module = "org.mongodb:mongodb-driver-core", version.ref = "mongodb" }
mongodbReactivestreams = { module = "org.mongodb:mongodb-driver-reactivestreams", version.ref = "mongoDriverReactivestreams" }
#tomcatCore = { module = "org.apache.tomcat.embed:tomcat-embed-core", version.ref = "tomcat" }
#tomcatEl = { module = "org.apache.tomcat.embed:tomcat-embed-el", version.ref = "tomcat" }
#springSecurityRsa = { module = "org.springframework.security:spring-security-rsa", version.ref = "springSecurityRsa" }
#javaNativeImage = { module = "gcr.io/paketo-buildpacks/java-native-image", version.ref = "javaNativeImage" }

annotations = { module = "org.jetbrains:annotations", version.ref = "annotations" }
openapi = { module = "org.springdoc:springdoc-openapi-webflux-ui", version.ref = "openapi" }
yavi = { module = "am.ik.yavi:yavi", version.ref = "yavi" }

devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "springBoot" }
jansi = { module = "org.fusesource.jansi:jansi", version.ref = "jansi" }

junitPlatformSuiteApi = { module = "org.junit.platform:junit-platform-suite-api", version.ref = "junitPlatformSuite" }
junitPlatformSuiteEngine = { module = "org.junit.platform:junit-platform-suite-engine", version.ref = "junitPlatformSuite" }
kotest = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotestJson = { module = "io.kotest:kotest-assertions-json", version.ref = "kotest" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

ktlint = { module = "com.pinterest:ktlint", version.ref = "ktlint" }
ktlintStdlibJdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "ktlintKotlin" }
ktlintCompiler = { module = "org.jetbrains.kotlin:kotlin-compiler-embeddable", version.ref = "ktlintKotlin" }
dokkaHtml = { module = "org.jetbrains.dokka:kotlin-as-java-plugin", version.ref = "dokka" }

[bundles]
mongodb = ["mongodbCore", "mongodbReactivestreams"]
#tomcat = ["tomcatCore", "tomcatEl"]
#graphqlJavaBundle = ["graphqlJava", "graphqlJavaDataloader"]
#slf4jBundle = ["slf4jApi", "slf4jJul"]
kotestBundle = ["kotest", "kotestJson"]
ktlint = ["ktlint", "ktlintStdlibJdk8", "ktlintCompiler"]

[plugins]
# org.jetbrains.kotlin:kotlin-gradle-plugin
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlinPlugin" }
kotlinSpring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlinPlugin" }
kotlinAllopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlinPlugin" }
kotlinNoarg = { id = "org.jetbrains.kotlin.plugin.noarg", version.ref = "kotlinPlugin" }
springBoot = { id = "org.springframework.boot", version.ref = "springBoot" }
testLogger = { id = "com.adarshr.test-logger", version.ref = "testLogger" }
allure = { id = "io.qameta.allure", version.ref = "allurePlugin" }
sweeney = { id = "com.fizzpod.sweeney", version.ref = "sweeney" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
jib = { id = "com.google.cloud.tools.jib", version.ref = "jib" }
owaspDependencycheck = { id = "org.owasp.dependencycheck", version.ref = "owaspDependencycheck" }
snyk = { id = "io.snyk.gradle.plugin.snykplugin", version.ref = "snyk" }
asciidoctor = { id = "org.asciidoctor.jvm.convert", version.ref = "asciidoctor" }
asciidoctorPdf = { id = "org.asciidoctor.jvm.pdf", version.ref = "asciidoctor" }
nwillc = { id = "com.github.nwillc.vplugin", version.ref = "nwillc" }
benManes = { id = "com.github.ben-manes.versions", version.ref = "benManes" }
licenseReport = { id = "com.github.jk1.dependency-license-report", version.ref = "licenseReport" }
